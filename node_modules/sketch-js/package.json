{
  "_args": [
    [
      {
        "raw": "sketch-js@^1.1.3",
        "scope": null,
        "escapedName": "sketch-js",
        "name": "sketch-js",
        "rawSpec": "^1.1.3",
        "spec": ">=1.1.3 <2.0.0",
        "type": "range"
      },
      "/Users/user/Google Drive/Cornell/Spring 2018/Interactive Devices/etch-a-sketch"
    ]
  ],
  "_from": "sketch-js@>=1.1.3 <2.0.0",
  "_id": "sketch-js@1.1.3",
  "_inCache": true,
  "_location": "/sketch-js",
  "_nodeVersion": "5.6.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/sketch-js-1.1.3.tgz_1481193027443_0.6916404031217098"
  },
  "_npmUser": {
    "name": "soulwire",
    "email": "justin@soulwire.co.uk"
  },
  "_npmVersion": "3.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sketch-js@^1.1.3",
    "scope": null,
    "escapedName": "sketch-js",
    "name": "sketch-js",
    "rawSpec": "^1.1.3",
    "spec": ">=1.1.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/sketch-js/-/sketch-js-1.1.3.tgz",
  "_shasum": "ca692351315f417b25be9fa826866f56827ad85e",
  "_shrinkwrap": null,
  "_spec": "sketch-js@^1.1.3",
  "_where": "/Users/user/Google Drive/Cornell/Spring 2018/Interactive Devices/etch-a-sketch",
  "author": {
    "name": "Justin Windle",
    "url": "https://github.com/soulwire"
  },
  "bugs": {
    "url": "https://github.com/soulwire/sketch.js/issues"
  },
  "dependencies": {},
  "description": "Cross-Platform JavaScript Creative Coding Framework",
  "devDependencies": {
    "uglify-js": "^2.7.4"
  },
  "directories": {
    "example": "examples",
    "test": "tests",
    "lib": "js"
  },
  "dist": {
    "shasum": "ca692351315f417b25be9fa826866f56827ad85e",
    "tarball": "https://registry.npmjs.org/sketch-js/-/sketch-js-1.1.3.tgz"
  },
  "gitHead": "e09f6c516d7f42867d1910cba9e6e891022e044e",
  "homepage": "https://github.com/soulwire/sketch.js",
  "keywords": [
    "sketch",
    "canvas",
    "webgl",
    "2d",
    "javascript"
  ],
  "license": "MIT",
  "main": "./js/sketch.js",
  "maintainers": [
    {
      "name": "soulwire",
      "email": "justin@soulwire.co.uk"
    }
  ],
  "name": "sketch-js",
  "optionalDependencies": {},
  "readme": "## sketch.js\n\nA tiny (~2kb gzipped) platform for JavaScript creative coding.\n\n<p align=\"center\">\n<a target=\"_blank\" href=\"http://soulwire.github.io/sketch.js/examples/drawing.html\"><img width=\"24.5%\" src=\"http://soulwire.github.io/sketch.js/examples/img/drawing.jpg\"></a>\n<a target=\"_blank\" href=\"http://soulwire.github.io/sketch.js/examples/particles.html\"><img width=\"24.5%\" src=\"http://soulwire.github.io/sketch.js/examples/img/particles.jpg\"></a>\n<a target=\"_blank\" href=\"http://soulwire.github.com/Plasmatic-Isosurface/\"><img width=\"24.5%\" src=\"http://soulwire.github.io/sketch.js/examples/img/plasma.jpg\"></a>\n<a target=\"_blank\" href=\"http://soulwire.github.com/Muscular-Hydrostats/\"><img width=\"24.5%\" src=\"http://soulwire.github.io/sketch.js/examples/img/tentacles.jpg\"></a>\n</p>\n\nA few examples from the [showcase](http://soulwire.github.com/sketch.js/)\n\n### Start Coding Faster\n\nsketch.js lets you get straight to the fun parts of creative coding, without ever having to worry about shims or boilerplate code.\n\nIt gives you a graphics context, an animation loop, normalised input events and a host of useful callbacks to hook into.\n\nHere's an example:\n````javascript\nSketch.create({\n    setup: function() {\n        this.r = this.g = this.b = random( 100, 200 );\n    },\n    mousemove: function() {\n        this.r = 255 * ( this.mouse.x / this.width );\n        this.g = 255 * ( this.mouse.y / this.height );\n        this.b = 255 * abs( cos( PI * this.mouse.y / this.width ) );\n    },\n    draw: function() {\n        this.fillStyle = 'rgb(' + ~~this.r + ',' + ~~this.g + ',' + ~~this.b + ')';\n        this.fillRect( 0, 0, this.width, this.height );\n    }\n});\n````\n\n[See it in action](http://jsfiddle.net/soulwire/7wtbm/)\n\n### The Highlights\n\n * A sketch is an augmented drawing context (`CanvasRenderingContext2D`, `WebGLRenderingContext` or `HTMLElement`) so it has all the expected drawing methods built in.\n * The `mouse` property is also the first element of the `touches` array and vice versa, so you can code to one standard and get touch and multi-touch support for free.\n * The `update` and `draw` loops run on the browser animation frame and can `stop` and `start` whenever you like.\n * You get fast access to `Math` functions and constants, plus extras like range and array enabled `random`, `map` and `lerp`.\n * Simple and configurable. You can even bring your own `context`, so it works well with libraries like [THREE](http://threejs.org/).\n\n### The Rest\n\nFor more information, check out the [getting started guide](https://github.com/soulwire/sketch.js/wiki/Getting-Started), the [API](https://github.com/soulwire/sketch.js/wiki/API), the many examples in the [showcase](http://soulwire.github.com/sketch.js/) and the full [source](https://github.com/soulwire/sketch.js/blob/master/js/sketch.js).",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/soulwire/sketch.js.git"
  },
  "scripts": {
    "build": "uglifyjs js/sketch.js --comments /copy/i -cmo js/sketch.min.js",
    "test": "echo \"visit ./tests/index.html in browser\""
  },
  "version": "1.1.3"
}
